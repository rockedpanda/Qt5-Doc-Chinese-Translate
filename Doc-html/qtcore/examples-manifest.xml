<?xml version="1.0" encoding="UTF-8"?>
<instructionals module="QtCore">
    <examples>
        <example name="Contiguous Cache Example" docUrl="qthelp://org.qt-project.qtcore.531/qtcore/qtcore-contiguouscache-example.html" projectPath="core/contiguouscache/contiguouscache.pro">
            <description><![CDATA[The Contiguous Cache example shows how to use QContiguousCache to manage memory usage for very large models. In some environments memory is limited and, even when it isn't, users still dislike an application using excessive memory. Using QContiguousCache to manage a list, rather than loading the entire list into memory, allows the application to limit the amount of memory it uses, regardless of the size of the data set it accesses]]></description>
            <tags>ios,contiguous,cache,core</tags>
            <fileToOpen mainFile="true">core/contiguouscache/main.cpp</fileToOpen>
        </example>
        <example name="Custom Type Example" docUrl="qthelp://org.qt-project.qtcore.531/qtcore/qtcore-customtype-example.html" projectPath="core/customtype/customtype.pro">
            <description><![CDATA[The Custom Type example shows how to integrate a custom type into Qt's meta-object system.]]></description>
            <tags>type,core,custom</tags>
            <fileToOpen mainFile="true">core/customtype/main.cpp</fileToOpen>
        </example>
        <example name="JSON Save Game Example" docUrl="qthelp://org.qt-project.qtcore.531/qtcore/qtcore-savegame-example.html" projectPath="core/savegame/savegame.pro">
            <description><![CDATA[The JSON Save Game example demonstrates how to save and load a small game using QJsonDocument, QJsonObject and QJsonArray.]]></description>
            <tags>save,core,json,game</tags>
            <fileToOpen mainFile="true">core/savegame/main.cpp</fileToOpen>
        </example>
        <example name="Local Fortune Client Example" docUrl="qthelp://org.qt-project.qtcore.531/qtcore/qtcore-localfortuneclient-example.html" projectPath="core/localfortuneclient/localfortuneclient.pro" imageUrl="qthelp://org.qt-project.qtcore.531/qtcore/images/localfortuneclient-example.png">
            <description><![CDATA[Demonstrates using QLocalSocket for a simple local service client.]]></description>
            <tags>client,fortune,core,local</tags>
            <fileToOpen mainFile="true">core/localfortuneclient/main.cpp</fileToOpen>
        </example>
        <example name="Local Fortune Server Example" docUrl="qthelp://org.qt-project.qtcore.531/qtcore/qtcore-localfortuneserver-example.html" projectPath="core/localfortuneserver/localfortuneserver.pro" imageUrl="qthelp://org.qt-project.qtcore.531/qtcore/images/localfortuneserver-example.png">
            <description><![CDATA[Demonstrates using QLocalServer and QLocalSocket for serving a simple local service.]]></description>
            <tags>fortune,server,core,local</tags>
            <fileToOpen mainFile="true">core/localfortuneserver/main.cpp</fileToOpen>
        </example>
        <example name="Mandelbrot Example" docUrl="qthelp://org.qt-project.qtcore.531/qtcore/qtcore-mandelbrot-example.html" projectPath="core/mandelbrot/mandelbrot.pro" imageUrl="qthelp://org.qt-project.qtcore.531/qtcore/images/mandelbrot-example.png">
            <description><![CDATA[The Mandelbrot example demonstrates multi-thread programming using Qt. It shows how to use a worker thread to perform heavy computations without blocking the main thread's event loop.]]></description>
            <tags>ios,mandelbrot,core</tags>
            <fileToOpen mainFile="true">core/mandelbrot/main.cpp</fileToOpen>
        </example>
        <example name="Queued Custom Type Example" docUrl="qthelp://org.qt-project.qtcore.531/qtcore/qtcore-queuedcustomtype-example.html" projectPath="core/queuedcustomtype/queuedcustomtype.pro" imageUrl="qthelp://org.qt-project.qtcore.531/qtcore/images/queuedcustomtype-example.png">
            <description><![CDATA[Demonstrates multi-thread programming using Qt]]></description>
            <tags>ios,type,queued,core,custom</tags>
            <fileToOpen mainFile="true">core/queuedcustomtype/main.cpp</fileToOpen>
        </example>
        <example name="Semaphores Example" docUrl="qthelp://org.qt-project.qtcore.531/qtcore/qtcore-semaphores-example.html" projectPath="core/semaphores/semaphores.pro">
            <description><![CDATA[Demonstrates multi-thread programming using Qt]]></description>
            <tags>core,semaphores</tags>
            <fileToOpen mainFile="true">core/semaphores/semaphores.cpp</fileToOpen>
        </example>
        <example name="Shared Memory Example" docUrl="qthelp://org.qt-project.qtcore.531/qtcore/qtcore-sharedmemory-example.html" projectPath="core/sharedmemory/sharedmemory.pro" imageUrl="qthelp://org.qt-project.qtcore.531/qtcore/images/sharedmemory-example_1.png">
            <description><![CDATA[Demonstrates doing inter-process communication using shared memory with the QSharedMemory class.]]></description>
            <tags>memory,core,shared</tags>
            <fileToOpen mainFile="true">core/sharedmemory/main.cpp</fileToOpen>
        </example>
        <example name="Wait Conditions Example" docUrl="qthelp://org.qt-project.qtcore.531/qtcore/qtcore-waitconditions-example.html" projectPath="core/waitconditions/waitconditions.pro">
            <description><![CDATA[Demonstrates multi-thread programming using Qt]]></description>
            <tags>wait,conditions,core</tags>
            <fileToOpen mainFile="true">core/waitconditions/waitconditions.cpp</fileToOpen>
        </example>
    </examples>
</instructionals>
